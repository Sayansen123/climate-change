

#include <stdio.h>
#include <stdlib.h>
struct node
	{
	int data;
	struct node*next;
    };
    // traverse
    struct node* traverse(struct node*head)
    {
struct node*temp;
	temp=head;
	while(temp!=NULL)
	{
	printf("%d\n",temp->data);
	temp=temp->next; 
}
return head;
}
//create a linked list
   struct node* createalinkedlist(struct node*head)
{
    struct node*newnode,*temp;
    int choice=1;
	while(choice)
	{
	newnode=(struct node*) malloc (sizeof(struct node));
    printf("enter data");
    scanf("%d",&newnode->data);
    newnode->next=NULL;
    if(head==NULL)
	{
		head=temp=newnode;
	}
	else
	{
		temp->next=newnode;
		temp=newnode;
    }
	printf("do you want to continue((0,1?))press'1'for yes and '0'for no");
	scanf("%d",&choice);
	while (choice!=0&&choice!=1)
	{
		printf("insufficient data");
	}
}
return head;
}
//insert at beginning
struct node* insertionbeg(struct node*head)
{
	struct node*newnode;
	newnode=(struct node*)malloc(sizeof(struct node));
	printf("enter data");
	scanf("%d",&newnode->data);
	newnode->next=head;
	head=newnode;
	return head;
}
//insert at end
struct node* insertionend(struct node*head)
{
	struct node*newnode,*temp;
	newnode=(struct node*)malloc(sizeof(struct node));
	printf("enter data");
	scanf("%d",&newnode->data);
	newnode->next=NULL;
	temp=head;
	while(temp->next!=NULL)
	{
		temp=temp->next;
	}
	temp->next=newnode;
	return head;
}
//insert after a node
struct node* afternode(struct node*head)
{
	struct node*temp,*newnode;
int i=1,choice;
newnode=(struct node*)malloc(sizeof(struct node));
printf("enter choice");
scanf("%d",&choice);
	temp=head;
	while(i<choice)
	{
	i++;
	temp=temp->next;
}
printf("enter data");
scanf("%d",&newnode->data);
newnode->next=temp->next;
temp->next=newnode;
return head;
}
//insert before a node 
struct node* before(struct node*head)
{
		struct node*temp,*newnode;
int i=2,choice;
newnode=(struct node*)malloc(sizeof(struct node));
printf("enter choice");
scanf("%d",&choice);
	temp=head;
	while(i<choice)
	{
	i++;
	temp=temp->next;
}
printf("enter data");
scanf("%d",&newnode->data);
newnode->next=temp->next;
temp->next=newnode;
return head;
}
//insert at any position
struct node* insertany(struct node*head)
{
		struct node*temp,*newnode;
int i=2,choice;
newnode=(struct node*)malloc(sizeof(struct node));
printf("enter choice");
scanf("%d",&choice);
	temp=head;
	while(i<choice)
	{
	i++;
	temp=temp->next;
}
printf("enter data");
scanf("%d",&newnode->data);
newnode->next=temp->next;
temp->next=newnode;
return head;
}
int main()
{
	int choice,choice1,choice2;
	struct node*head=NULL;
	while(1)
	{
	printf("enter 1 for create a linked list\n");
	printf("enter 2 for traverse\n");
	printf("enter 3 for insert\n");
	printf("enter 4 to end the loop\n");
	printf("enter your choice");  
	scanf("%d",&choice);
	switch(choice)
	{
		case 1:head=createalinkedlist(head);
		break;
		case 2:head=traverse(head);
		break;
		case 3:
			printf("enter 1 for insert beginning\n");
			printf("enter 2 for insert end\n");
			printf("enter 3 for insert at any position\n");
			printf("enter your choice");
			scanf("%d",&choice1);
			switch(choice1)
			{
				case 1:head=insertionbeg(head);
				break;
				case 2:head=insertionend(head);
				break;
				case 3:
					printf("enter 1 for insert before a node\n");
					printf("enter 2 for insert after a node\n");
					printf("enter 3 for insert at a specific position\n");
					printf("enter your choice");
					scanf("%d",&choice2);
					switch(choice2)
					{
						case 1:head=before(head);
						break;
						case 2:head=afternode(head);
						break;
						case 3:head=insertany(head);
						break;
						default:
							break;
					}
				break;
				default:
					break;
			}
		break;
		case 4:exit(1);
		break;
		default:
		break;	
}
	}
	return 0;
}
